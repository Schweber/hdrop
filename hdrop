#!/usr/bin/env bash

print_help() {
  echo ""
  echo "This script emulates the main features of tdrop (https://github.com/noctuid/tdrop) in Hyprland."
  echo ""
  echo "Default beraviour:"
  echo ""
  echo " - if the specified program is not running: launch it and bring it to the foreground."
  echo " - if the specified program is already running on another workspace: bring it to the current workspace and focus it."
  echo " - if the specified program is already on the current workspace: move it to workspace 'special:hdrop', thereby hiding it until called up again by hdrop."
  echo ""
  echo "Several instances of the same program can be run concurrently, if different class names are assigned to each instance. Presently there is support for the following flags:"
  echo ""
  echo " -a         ('foot' terminal emulator)"
  echo " --class    (all other programs)."
  echo ""
  echo "Example bindings in Hyprland config:"
  echo ""
  echo ' bind = $mainMod, b, exec, hdrop librewolf'
  echo ' bind = $mainMod, x, exec, hdrop kitty --class kitty_1'
  echo ' bind = $mainMod CTRL, x, exec, hdrop kitty --class kitty_2'
  echo ' bind = $mainMod, c, exec, hdrop foot -a foot_1'
  echo ' bind = $mainMod CTRL, c, exec, hdrop foot -a foot_2'
  echo ""
  echo "Note: defining a class name is only necessary when running several instances of the same program."
  echo ""
  echo ""
  echo "Flags:"
  echo ""
  echo "-b | --background    changes the default behaviour: if the specified program is not running, launch it in the background. Thereafter 'hdrop -b' will work the same as without this flag."
  echo ""
  echo ""
  echo "Please feel free to report missing flags or peculiarities for other programs!"
  echo ""
  echo "Dependencies: bash jq hyprland"
  echo "Part of: https://github.com/hyprwm/contrib"
  echo "Author: Schweber (https://github.com/Schweber/hdrop)"
  echo "License: AGPL3"
  print_version
}

print_version() {
  echo ""
  echo "Version: 0.2.0"
}

notify() {
  notify-send "$@" || hyprctl notify 0 5000 0 "$@"
}

BACKGROUND=""

case "$1" in
"")
  notify "hdrop: missing Argument" "Run 'hdrop -h' for more information"
  print_help
  exit 1
  ;;
-h | --help)
  print_help
  exit
  ;;
-v | --version)
  print_version
  exit
  ;;
-b | --background)
  BACKGROUND="hyprctl dispatch -- exec [workspace special:hdrop silent] "
  shift
  ;;
-*)
  notify "hdrop: unrecognized flag" "Run 'hdrop -h' for more information"
  print_help
  exit 1
  ;;
esac

ACTIVE_WORKSPACE="$(hyprctl activeworkspace -j | jq -r .id)"
COMMANDLINE="${*:1}"
CLASS="$1"

case "$1" in
foot)
  TEMP=$(getopt --options a: -n hdrop -- "$@")
  ;;
telegram-desktop)
  CLASS="org.telegram.desktop"
  ;;
*)
  TEMP=$(getopt --longoptions class: -n hdrop -- "$@")
  ;;
esac

if [[ -n $TEMP ]]; then
  eval set -- "$TEMP"
  while true; do
    case "$1" in
    -a | --class)
      CLASS="$2"
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *) break ;;
    esac
  done
fi

if [[ $(hyprctl clients -j | jq -r ".[] | select(.class==\"$CLASS\" and .workspace.id!=$ACTIVE_WORKSPACE)") ]]; then
  hyprctl dispatch -- movetoworkspacesilent "$ACTIVE_WORKSPACE","$CLASS" || notify "hdrop: Error moving '$commandline' to current workspace"
  hyprctl dispatch -- focuswindow "$CLASS" || notify "hdrop: Error focusing '$commandline' on current workspace"
elif [[ $(hyprctl clients -j | jq -r ".[] | select(.class==\"$CLASS\" and .workspace.id==$ACTIVE_WORKSPACE)") ]]; then
  hyprctl dispatch -- movetoworkspacesilent special:hdrop,"$CLASS" || notify "hdrop: Error moving '$commandline' to workspace 'special:hdrop'"
else
  $BACKGROUND $COMMANDLINE || notify "hdrop: Error executing given command" "$COMMANDLINE"
fi
